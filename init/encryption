#!/usr/bin/env bash

ETAB=/etc/etab
DECRYPTED=()

decrypt() {
	dir=$1
	keyf=$2
	EFLAG=$dir/.decrypted

	[ ! -d "${dir}" ] && return 1

	cat ${EFLAG} &>/dev/null
	if [ $? -eq 0 ]; then
		echo "decrypted" > $EFLAG
		echo "Path is already decrypted"
		return 0
	fi

	if [ -z "${keyf}" ]; then
		keyf=$(awk -F '[[:space:]]' -vdir=${dir} '$1 == dir {print $2}' ${ETAB})
		[ $? -ne 0 ] && return 1
		if [ -f "${keyf}" ]; then
			key=$(cat ${keyf})
			[ $? -ne 0 ] && return 1
		else
			echo "No salt file found"
			return 1
		fi
	else
		if [ -f "${keyf}" ]; then
			key=$(cat ${keyf})
			[ $? -ne 0 ] && return 1
		else
			echo "No salt file found"
			return 1
		fi
	fi
	read -s -e -p "Provide the encryption key for $dir: " secret

	echo "${secret}" | /usr/sbin/e4crypt add_key -S ${key} ${dir}
	[ $? -ne 0 ] && return 1
	DECRYPTED+=("$(realpath $dir)/")
	echo "decrypted" > $EFLAG
}

already_opened() {
	dir="$1/"
	for item in ${DECRYPTED[@]}; do
		echo "$(realpath -q $dir)/" | grep -q "$item" && return 0
	done
	return 1
}

create_key() {
	[ -z "${1}" ] && { echo "No salt file output provided"; exit 1; }
	echo 0x$(head -c 16 /dev/urandom | xxd -p) > $1
}

encrypt() {
	dir=$1
	keyf=$2
	program=$3

	keyf=$(awk -F '[[:space:]]' -vdir=${dir} '$1 == dir {print $2}' ${ETAB})

	if [ -z "${keyf}" -o ! -f "${keyf}" ]; then
		read -e -p "Provide salt file name (to be created): " keyf
		$program create-salt $keyf
		[ $? -ne 0 ] && return 1
	fi
	key=$(cat ${keyf})
	[ $? -ne 0 ] && return 1
	/usr/sbin/e4crypt add_key -S $key $dir
	[ $? -ne 0 ] && return 1
	echo -e "$dir\t$keyf" >> ${ETAB}
	if [ $? -ne 0 ]; then
		echo "*** WARNING: Directory was encrypted, but path and keyfile where not stored in $ETAB ***"
		return 1
	fi
}

check() {
	dir=$1
	EFLAG=$dir/.decrypted

	[ ! -d "${dir}" ] && return 1

	cat ${EFLAG} &>/dev/null
	if [ $? -eq 0 ]; then
		echo "decrypted" > $EFLAG
		echo "Path is already decrypted"
		return 0
	else
		keyf=$(awk -F '[[:space:]]' -vdir=${dir} '$1 == dir {print $2}' ${ETAB})
		if [ -n "${keyf}" ]; then
			echo "Path is encrypted"
			return 1
		else
			echo "Path is not in the key tab"
			return 0
		fi
	fi
}

case $1 in
	open|start)
		if [ -n "${2}" ]; then
			decrypt $(realpath ${2}) ${3}
		else
			[ ! -f "${ETAB}" ] && { echo "No encryption tab found"; exit 1; }
			exec 6< ${ETAB}

			while read -u6 directory salt; do
				already_opened $directory || decrypt $(realpath ${directory}) ${salt}
			done
			exec 6<&-
		fi
	;;
	encrypt)
		encrypt ${2} ${3} ${0}
	;;
	create-salt)
		create_key ${2}
	;;
	check)
		[ -n "$2" ] && dir="${2}" || dir="${PWD}"
		check $dir
	;;
	*)
	;;
esac

